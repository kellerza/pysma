name: CI

on: [push, pull_request]

env:
  RUFF_VERSION: 0.14.0
  UV_VERSION: 0.9.2

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: chartboost/ruff-action@v1
        with:
          version: ${{ env.RUFF_VERSION }}
      - uses: chartboost/ruff-action@v1
        with:
          args: "format --check"
          version: ${{ env.RUFF_VERSION }}

  mypy:
    name: Check mypy
    needs: [ruff]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: "Set up Python"
        uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install Requirements
        run: uv sync --frozen --all-extras
      - name: Run mypy
        run: uv run mypy . --config-file pyproject.toml

  pytest:
    name: Run tests Python ${{ matrix.python-version }}
    needs: [ruff]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13", "3.14"]
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v5
      - name: "Set up Python"
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install Requirements
        run: uv sync --frozen --all-extras
      - name: Run tests and generate coverage report
        run: uv run pytest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./cov.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: PYTHON
          verbose: true

  release:
    name: Build and publish Python üêç distributions üì¶ to PyPI
    needs: [pytest]
    #if: startsWith(github.ref, 'refs/tags')

    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Setup | Checkout Repository at workflow sha
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Setup | Force correct release branch on workflow sha
        run: |
          git checkout -B ${{ github.ref_name }} ${{ github.sha }}

      - name: Action | Semantic Version Release
        id: release
        # Adjust tag with desired version if applicable.
        uses: python-semantic-release/python-semantic-release@v10.4.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
        if: steps.release.outputs.released == 'true'

      - name: Publish distribution üì¶ to PyPI
        run: uv publish
        if: steps.release.outputs.released == 'true'
